---
import Pagination from '@/components/ui/Pagination.astro'
import Layout from '@/layouts/Layout.astro'
import { trimExcerpt } from '@/lib/utils'
import { template } from '@/settings'

export async function getStaticPaths({ paginate }):any {
    const blogEntries = await Astro.glob('../../../assets/blog/*.md')
                    const posts = blogEntries
		.map(post => ({
			title: post.frontmatter.title,
            date: post.frontmatter.date,
			badge: post.frontmatter.tags[0],
			excerpt: trimExcerpt(post.frontmatter.excerpt),
            slug: post.file.split('/')?.pop()?.split('.')[0] ?? '',
            category: post.frontmatter.category?.toLowerCase().replace(/\s+/g,'-') ?? '',
		}))
    .sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime())


    const categories = [... new Set(
        posts.map(post => post.category)
    )].filter(Boolean);

    const paths = categories.map(category => ({
        params: { category: category },
        props: { categories }
    }))

    // Page with all posts
    paths.push({
        params: { category: "all" },
        props: { categories },
    });

    console.log("PATHS", paths)

    return paths.flatMap(({ params, props }) => 
        paginate(
            params.category === "all" 
                ? posts
                : posts.filter(post => post.category === params.category),
            { pageSize: template.postPerPage, params: {
                ...params,
                page: undefined
            }, props }
        )
    );
}


const { page, categories } = Astro.props
const selectedCategory = Astro.params.category || "all"
---

<Layout title='Blog'>
    <div>
		<h1 class='text-3xl font-bold mb-8'>Blog Posts</h1>
        {categories &&
		<div class='flex justify-between items-center mb-8'>
			<div class='flex gap-4'>
				<select class='select select-bordered w-full max-w-xs' id="categoryFilter">
                    <option value="all" selected={selectedCategory === "all"}>All Categories</option>
                        {categories.map(category => (
                    <option value={category} selected={category === selectedCategory}>{category}</option>
                    ))}
				</select>
			</div>
		</div>
        }
		<div class='grid gap-8'>
			{
				page.data.map(post => (
					<article class='card bg-base-200 transition-all'>
						<div class='card-body'>
							<div class='flex justify-between items-start'>
								<h2 class='card-title text-xl'>
									<a href={`/blog/${post.slug}`} class='hover:text-accent'>
										{post.title}
									</a>
								</h2>
								<div class='badge badge-accent badge-outline p-4'>
									{post.badge}
								</div>
							</div>
							<time datetime={post.date} class='text-sm text-base-content/71'>
								{new Date(post.date).toLocaleDateString('en-US', {
									year: 'numeric',
									month: 'long',
									day: 'numeric',
								})}
							</time>
							<p class='mt-4'>{post.excerpt}</p>
							<div class='card-actions justify-end'>
								<a
									href={`/blog/${post.slug}`}
									class='btn btn-sm btn-secondary text-secondary-content'
								>
									Read More
								</a>
							</div>
						</div>
					</article>
				))
			}
		</div>

		<div class='flex justify-center mt-8'>
			<Pagination page={page} />
		</div>
    </div>

    <script>
        document.getElementById("categoryFilter")?.addEventListener("change", (event) => {
        const selected = event.target.value;
            window.location = selected === "all" ? "/blog/all/1" : `/blog/${selected}/1`;
    });
    </script>
</Layout>
